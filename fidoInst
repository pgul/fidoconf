#!/bin/bash
echo ""
echo ""
echo "FidoConfig point Setup Tool to be used with Bash shell  (v.0.0.1 by Zano)"
echo
"-------------------------------------------------------------------------"
echo "This setup tool has been modified to meet Bash shell requirements and some"
echo "token have been added"
echo ""
echo "Installing on a (p)ersonal or on (D)efault directories? [p/D]"
echo "Ctrl-c to exit"
read -r METHOD
if [ "$METHOD" = "" ]; then
   BASEDIR=/etc/fido
   SPOOLDIR=/var/spool/fido
   LOGDIR=/var/log/fido
   MSGBASEDIR=${SPOOLDIR}/msgBase
else
 if test ${METHOD} = p; then
    echo " "
    echo "Input the directory where FidoConfig will be installed "
    echo "WITHOUT ending '/'"
    read -r BASEDIR
    SPOOLDIR=${BASEDIR}
    LOGDIR=${BASEDIR}/log
    MSGBASEDIR=${BASEDIR}/msgBase
 else
   BASEDIR=/etc/fido
   SPOOLDIR=/var/spool/fido
   LOGDIR=/var/log/fido
   MSGBASEDIR=${SPOOLDIR}/msgBase
 fi
fi
#
# Some personal data
#
echo "****"
echo "*      ANSWER ALL THE QUESTIONS OR THE TOOL WILL EXIT"
echo "****"
echo " "
echo "Input your name > ";
  read -r NAME
 if [ "$NAME" = "" ]; then
  echo "DATA INCOMPLETE ------ Exiting"
  exit 1
 fi
echo " "
echo "Input the name of your system > ";
  read -r SYSNAME
 if [ "$SYSNAME" = "" ]; then
  echo "DATA INCOMPLETE ------ Exiting"
  exit 1
 fi
echo " "
echo "Input your your Fido Address > ";
  read -r AKA
 if [ "$AKA" = "" ]; then
  echo "DATA INCOMPLETE ------ Exiting"
  exit 1
 fi
echo " "
echo "Input the location of your system > ";
  read -r LOCATION
 if [ "$LOCATION" = "" ]; then
  echo "DATA INCOMPLETE ------ Exiting"
  exit 1
 fi
echo " "
echo "Input the name of your Uplink > ";
  read -r UPLINK_NAME
 if [ "$UPLINK_NAME" = "" ]; then
  echo "DATA INCOMPLETE ------ Exiting"
  exit 1
 fi
echo " "
echo "Input the address of your Uplink > ";
  read -r UPLINK_AKA
 if [ "$UPLINK_AKA" = "" ]; then
  echo "DATA INCOMPLETE ------ Exiting"
  exit 1
 fi
echo " "
echo "Input your password > ";
  read -r PASSWORD
 if [ "$PASSWORD" = "" ]; then
  echo "DATA INCOMPLETE ----- Exiting"
  exit 1
 fi
echo " "
echo " "
echo "If everything is OK, press ENTER otherwise Ctrl-c"
     read -r KEYPRESS
   if [ "$KEYPRESS" = "" ]; then
    echo "PROCEEDING......"
   fi

if test ! -d ${BASEDIR}; then
   mkdir -p ${BASEDIR}
fi

if test -f ${BASEDIR}/config; then
   mv ${BASEDIR}/config ${BASEDIR}/config.old
   echo "Moved existing config to config.old"
fi
echo " "
echo "Generating config file..."
( echo "# FidoConfig generated by fidoInst for bash by Zano"
echo "Version 0.14"
echo "Name ${SYSNAME}"
echo "Sysop ${NAME}"
echo "Location ${LOCATION}"
echo "Address ${AKA}"
echo ""
echo "AutoCreateDefaults -p14 -dupeCheck move -dupeHistory 11"
echo 'Unpack "unzip -j -Loqq $a $f -d $p" 0 504b0304'
echo "Pack zip zip -9 -j -q $a $f"
echo " "
echo "Link ${UPLINK_NAME}"
echo "AKA ${UPLINK_AKA}"
echo "ourAka ${AKA}"
echo "Password ${PASSWORD}"
echo "EchoMailFlavour Direct"
echo "autoAreaCreate on"
echo "Packer zip"
echo ""
echo "route Crash ${UPLINK_AKA} *"
echo ""
echo "Inbound ${SPOOLDIR}/in"
echo "ProtInbound ${SPOOLDIR}/in.sec"
echo "TempInbound ${SPOOLDIR}/in.tmp"
echo "Outbound ${SPOOLDIR}/out"
echo "TempOutbound ${SPOOLDIR}/out.tmp"
echo "LogFileDir ${LOGDIR}"
echo "DupeHistoryDir ${SPOOLDIR}/dupes"
echo "NodeListDir ${SPOOLDIR}/nodelist"
echo "MsgBaseDir ${MSGBASEDIR}"
echo ""
echo "EchoTossLog ${SPOOLDIR}/echotoss.log"
echo "ImportLog ${SPOOLDIR}/import.log"
echo "LinkWithImportLog yes"
echo " "
echo "NetMailArea NetMailArea ${MSGBASEDIR}/netmail -b squish"
echo "BadArea     Badarea     ${MSGBASEDIR}/bad     -b squish"
echo "DupeArea    DupeArea    ${MSGBASEDIR}/dupe    -b squish"
echo "EchoArea    Test        ${MSGBASEDIR}/test    -a ${AKA} -b squish
${UPLINK_AKA} -p 30"
     ) > ${BASEDIR}/config
echo " "
echo "Creating necessary directories..."
mkdir -p ${SPOOLDIR}/inbound
mkdir -p ${SPOOLDIR}/inbound.sec
mkdir -p ${SPOOLDIR}/inbound.tmp
mkdir -p ${SPOOLDIR}/outbound
mkdir -p ${SPOOLDIR}/outbound.tmp
mkdir -p ${LOGDIR}
mkdir -p ${SPOOLDIR}/dupes
mkdir -p ${SPOOLDIR}/nodelist
mkdir -p ${MSGBASEDIR}
echo " "
echo "******** FINISHED!!! *******"
echo "You can now adapt "$BASEDIR"/config to meet your preferences"
echo "Please, refer to ~/fidoconfig/doc/ files  for any doubt"
echo"                                            Thank by Zano"
exit 0;