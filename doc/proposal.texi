@c this is the proposal info file

This chapter describes how a fidoconfig config-file is written, which keywords
exist and where to put the file.

@menu
* Location:: Where to put the config file
* Keywords:: Keyword reference
* Example::  Here is a sample configfile which works for me
@end menu

@node Location, Keywords, , config file
@section Configfile location
The fidoconfig library searches the config file on different locations:

@table @asis
@item linux:
/etc/fido/config
@item freebsd:
/usr/local/fido/config
@item os2/win32/dos:
c:\fido\config
@end table

Additionally you can set an enviroment variable called @code{FIDOCONFIG} which
points to the file:

@example
set FIDOCONFIG=e:\bbs\fidoconfig\config

FIDOCONFIG=~/fidoconfig/config
export FIDOCONFIG
@end example

The config file(s) must be readable. If you plan to use the autoareacreate
feature the config file must be writeable.

@node Keywords, Example, Location, config file
@section Keywords
All statements are case-@strong{insensitive}. A line which starts with a # is
a comment and will be ignored.

@menu
* version::        version of fidoconfig
* name::           your Systems Name
* location::       your location
* sysop::          your Name
* include::        include other files
* address::        your system address
* outbound::       outbound path
* inbound::        inbound path
* protinbound::    protected inbound
* listinbound::    listed inbound
* localinbound::   local inbound
* msgbasedir::     base directory of areas
* public::         path for requestable files
* logfiledir::     path for log files
* dupehistorydir:: path for dupe files
* nodelistdir::    path for nodelists
* magic::          path for magic-file requests
* link::           adding a link to your config
* aka::            links adress
* password::       links session and default password 
* pktpwd::         pktpassword for this link
* ticpwd::         ticcer password for this link
* areafixpwd::     areafix password for this link
* filefixpwd::     filefix password for this link
* bbspwd::         bbs password for this link (online user)
* handle::         nickname or handle for link
* tossgrp::        tosser groups which link belongs to
* ticgrp::         ticcer groups which link belongs to
* bbsgrp::         online groups which link belongs to
* autoareacreate:: right to auto create areas on your system
* packer::         default packer for link
@end menu

@node version, name, , Keywords
@subsection version
@table @asis
@item Syntax:
@code{version <integer>.<integer>}
@item Example:
@code{version 0.13}
@end table

Here you specify to which version of fidoconfig your config belong.
Currently this statement does nothing.

This statement cannot be repeated.

@node name, location, version, Keywords
@subsection name
@table @asis
@item Syntax:
@code{name <text>}
@item Example:
@code{name Leetebrok BBS}
@end table

Here you specify your Systems name.

This statement cannot be repeated.

@node location, sysop, name, Keywords
@subsection location
@table @asis
@item Syntax:
@code{location <text>}
@item Example:
@code{location Dusseldorf}
@end table

You specify your Location here.

This statement cannot be repeated.

@node sysop, include, location, Keywords
@subsection sysop
@table @asis
@item Syntax:
@code{sysop <text>}
@item Example:
@code{sysop Matthias Tichy}
@end table

You specify your name with this keyword.

This statement cannot be repeated.

@node include, address, sysop, Keywords
@subsection include
@table @asis
@item Syntax:
@code{include <file>}
@item Example:
@code{include /etc/fido/areas}
@end table

You can include other files into your config file. For example if you would like to
have different config parts, you can include a file and (via cron job or manually)
change the content of this file without changing the rest of the config.
Additionally you can split your config in different parts. So you can
have your fileareas definition in another file than your msgareas definition.
This gives your the ability to have some survey about your config.

This statement can be repeated. But dont make recursive includes. eg on file
which includes another which includes the first.

@strong{This statement is currently not supported.}

@node address, outbound, include, Keywords
@subsection address
@table @asis
@item Syntax:
@code{Address <aka> [Line [unsignedInteger]1* ]}
@item Example:
@code{Address 2:2433/1245 Line 1 4 5}
@end table

This command specifies which akas your system has. This statement is full 5d
compatible, which means you can have also addresses like @code{2:2433/1245.1@@fidonet.org}.
If the Line options is empty this aka is displayed on all lines. In the above
example this aka is displayed on line 1, 4 and 5.
The first address statement is your main aka which will be used by tossers
on different occasions, for example if zone number could not be taken from
the @@INTL Kludge in netmails.

This statement can be repeated.

@strong{The Line option is not supported}
@strong{The domain name is not full supported throughout fidoconfig}

@node outbound, inbound, address, Keywords
@subsection outbound
@table @asis
@item Syntax:
@code{outbound <path>}
@item Example:
@code{outbound /var/spool/fido/out}
@end table

This command specifies your outbound path. This outbound path is binkley-style.
A binkley style outbound consists of a base path and subdirectories. Each subdirectory
represents a place for all the files for one zone. The base path is the zone path
for your base zone.

Example:

@example
@table @asis
@item /var/spool/fido/out
This directory contains the files for your base zone.
@item /var/spool/fido/out.003
This directory contains the files for zone 3.
@item /var/spool/fido/out.00A
This directory contains the files for zone 10.
@end table
@end example

The zone directory contains the flow-files for each node. A Flow-file of a node
has the name NNNNFFFF.?lo

@example
@table @asis
@item NNNN
The 4-digit hex-number of the nodes netnumber.
@item FFFF
The 4-digit hex-number of the nodes nodenumber.
@item ?
Here the flavour of the mails can be chosen. @strong{h}old, @strong{c}rash,
@strong{f}normal.
@end table
@end example

For points there is a subdirectory with nodes flowfilename with suffix.pnt. In
this subdirectory the flowfiles have the names PPPPPPPP ( 8-digit point number
in hex).

For a deeper background on a binkley-style outbound see the binkley-term
documentation and source code.

@node inbound, protinbound, outbound, Keywords
@subsection inbound
@table @asis
@item Syntax:
@code{inbound <path>}
@item Example:
@code{inbound /var/spool/fido/in}
@end table

This command specifies where your inbound files are stored. This directory
is the base directory which means if you have a connection which ist not
protected and the other system is not listed. The files go in here.
Only netmails are tossed from this inbound.

This statement cannot be repeated.

@node protinbound, listinbound, inbound, Keywords
@subsection protinbound
@table @asis
@item Syntax:
@code{protinbound <path>}
@item Example:
@code{protinbound /var/spool/fido/in.sec}
@end table

This command specifies where files should be stored which were received
during a password-protected session.
All types of mail are tossed from this path. But passwords are checked
before.

This statement cannot be repeated.

@node listinbound, localinbound, protinbound, Keywords
@subsection listinbound
@table @asis
@item Syntax:
@code{listinbound <path>}
@item Example:
@code{listinbound /var/spool/fido/in.lst}
@end table

This command specifies where the files should be stored which were
received during a non-password-protected session from a listed system.
Only netmails are tossed from this path.

This statement cannot be repeated.

@node localinbound, msgbasedir, listinbound, Keywords
@subsection localinbound
@table @asis
@item Syntax:
@code{localinbound <path>}
@item Example:
@code{localinbound /var/spool/fido/in.loc}
@end table

This command specifies the path, from which all types of netmail and echomail
are tossed @strong{without} any password checking. You can put pkt´s here
which were created by a file tosser etc. So created by a you or a programm on
your own system.

This statement cannot be repeated.

@node msgbasedir, public, localinbound, Keywords
@subsection msgBaseDir
@table @asis
@item Syntax:
@code{msgBaseDir <path>}
@item Example:
@code{msgBaseDir /var/spool/fido/msgb}
@end table

This command specifies the path where autoareacreated msgBases are stored.
For example: If an area called @code{LINUX.GER} was autoareacreated and
te msgBaseDir is @code{/var/spool/fido/msgb} the resulting msgBaseName is

@example
/var/spool/fido/msgb/linux.ger.sqd
@end example

This statement cannot be repeated.

@node public, logfiledir, msgbasedir, Keywords
@subsection public
@table @asis
@item Syntax:
@code{public <path>}
@item Example:
@code{public /var/spool/fido/public}
@end table

This command specifies the path where files which are requested are searched
for. The files are searched in this directory and in all subdirectories.

This command can be repeated.

@node logfiledir, dupehistorydir, public, Keywords
@subsection logFileDir
@table @asis
@item Syntax:
@code{logFileDir <path>}
@item Example:
@code{logFileDir /var/spool/log/fido}
@end table

This command specifies the path where the log-files of the fido-programs should
be stored.

This statement cannot be repeated.

@node dupehistorydir, nodelistdir, logfiledir, Keywords
@subsection dupeHistoryDir
@table @asis
@item Syntax:
@code{dupeHistoryDir <path>}
@item Example:
@code{dupeHistoryDir /var/spool/fido/dupes}
@end table

This command specifies the path where the dupe history files are stored.
The format and the names of the dupe-files are not standardized.

This statement cannot be repeated.

@node nodelistdir, magic, dupehistorydir, Keywords
@subsection nodelistDir
@table @asis
@item Syntax:
@code{nodelistDir <path>}
@item Example:
@code{nodelistDir /var/spool/fido/nodelist}
@end table

This command specifies the path where the actual nodelists are or should
be written to.
This path contains the raw nodelist as well as the compiled ones.

This statement cannot be repeated.

@node magic, link, nodelistdir, Keywords
@subsection magic
@table @asis
@item Syntax:
@code{magic <path>}
@item Example:
@code{magic /var/spool/fido/magic}
@end table

Directory with executables to satisfy "magic" file requests
if requested a file present in this directory, it will be
executed and stdout sent to the remote system.  If the file
is not executable, it is read line by line and the lines are
processed as if they were received file requests (recusively).
Execution of commands may compromize security!  You are warned.

This statement cannot be repeated.

@node link, aka, magic, Keywords
@subsection link
@table @asis
@item Syntax:
@code{link <name>}
@item Example:
@code{link Matthias Tichy}
@end table

This statement starts a new Link-definition. All the following link-related statements
change the configuration of this link until a new link statement is found.
The name is the name of this link.

This statement can be repeated.

@node aka, password, link, Keywords
[[BBB@subsection aka
@table @asis
@item Syntax:
@code{aka <aka>}
@item Example:
@code{aka 2:2433/1245}
@end table

This statement sets the aka for the current link. 

This statement can only be repeated for different links.

@node password, pktpwd, aka, Keywords
@subsection password
@table @asis
@item Syntax:
@code{password <string>}
@item Example:
@code{password secret}
@end table

This statement sets the session and the default password for the link.
If you do not change the other passwords, they are set to this password.
Only passwords with maximal 8 characters are valid because of limitations of
other software packages.

This statement can only be repeated for different links.

@node pktpwd, ticpwd, password, Keywords
@subsection pktpwd
@table @asis
@item Syntax:
@code{pktpwd [<string>]}
@item Example:
@code{pktpwd geheim}
@end table

This statement sets the pktpassword for the actual link.
Only passwords with maximal 8 characters are valid because of limitations of
other software packages.
An empty statement is allowed.

This statement can only be repeated for different links.

@node ticpwd, areafixpwd, pktpwd, Keywords
@subsection ticpwd
@table @asis
@item Syntax:
@code{ticpwd [<string>]}
@item Example:
@code{ticpwd geheim}
@end table

This statement sets the ticcer password for the actual link.
Only passwords with maximal 8 characters are valid because of limitations of
other software packages.
An empty statement is allowed.

This statement can only be repeated for different links.

@node areafixpwd, filefixpwd, ticpwd, Keywords
@subsection areafixpwd
@table @asis
@item Syntax:
@code{areafixpwd [<string>]}
@item Example:
@code{areafixpwd geheim}
@end table

This statement sets the areafix password for the actual link.
Only passwords with maximal 8 characters are valid because of limitations of
other software packages.
An empty statement is allowed.

This statement can only be repeated for different links.

@node filefixpwd, bbspwd, areafixpwd, Keywords
@subsection filefixpwd
@table @asis
@item Syntax:
@code{filefixpwd [<string>]}
@item Example:
@code{filefixpwd geheim}
@end table

This statement sets the filefix password for the actual link.
Only passwords with maximal 8 characters are valid because of limitations of
other software packages.
An empty statement is allowed.

This statement can only be repeated for different links.

@node bbspwd, handle, filefixpwd, Keywords
@subsection bbspwd
@table @asis
@item Syntax:
@code{bbspwd [<string>]}
@item Example:
@code{bbspwd geheim}
@end table

This statement sets the bbs password for the actual link.
Only passwords with maximal 8 characters are valid because of limitations of
other software packages.
An empty statement is allowed.

This statement can only be repeated for different links.

@node handle, tossgrp, bbspwd, Keywords
@subsection handle
@table @asis
@item Syntax:
@code{handle <string>}
@item Example:
@code{handle eddie}
@end table

This statement sets the handle or nickname for the link.

This statement can only be repeated for different links.

@node tossgrp, ticgrp, tosspwd, Keywords
@subsection tossgrp
@table @asis
@item Syntax:
@code{tossgrp {<group>}}
@item Example:
@code{tossgrp eddie}
@end table

This statement sets the handle or nickname for the link.

This statement can only be repeated for different links.


@node Example, , Keywords, config file
@section Working sample config
@example
@include config
@end example
