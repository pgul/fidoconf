\input texinfo @c -*-texinfo-*-
@c %**start of header
@setfilename fidoconfig.info
@settitle FidoConfig Manual
@setchapternewpage odd
@c %**end of header

@ifinfo
This file documents fidoconfig.

Copyright 1998-2002 Husky Development Team

@end ifinfo

@titlepage
@title FidoConfig Manual
@subtitle a way to make your unix fido-capable
@author Matthias Tichy
@author Max Levenkov

@page
@vskip 0pt plus 1filll
Copyright @copyright{} 1998-2002 Husky Development Team

@end titlepage

@c @ifinfo

@dircategory Fidonet Software
@direntry
* Fidoconfig: (fidoconfig).     The format of the husky common config file.
@end direntry

@node Top, , , (dir)
@top fidoconfig

This document describes the use of fidoconfig to make fido work on your
favorite platform.

This document applies to version 1.4 of fidoconfig.
@c @end ifinfo

@menu
* design goals::  what we want to achieve
* config file::   how does it look like
* tparser::       testing your config
* converting::    Converting fidoconfig
* contact::       contacting the author
@end menu

@node design goals, config file, Top, Top
@chapter Design goals
The design goal of fidoconfig was to provide one config-file for several
different fido software packages like editor, tosser etc.
An additional aim was to have one library (fidoconfig) which can be used by
all programs.
The advantage is you only have to edit one config-file, so changing your
system is much easier than with common software packages. Also bugs can only
creep in one library and not in thousands over thousands libraries.
The config definition can be used in all operating systems. Also the library
should be quite portable.

@node config file, converting, design goals, Top
@chapter Config file

@include proposal.texi

@node converting, tparser, config file, Top
@chapter Converting fidoconfig
Since popular mail readers, BBS programs and mailers does not support
fidoconfig, we have developed programs that convert your fidoconfig to
these config file formats.

Golded+ by Alexander A.Aganichev supports fidoconfig and converter isn't needs,
MsgEd TE 6.x and above integrated with fidoconfig.

Also we have developed program to convert configuration files of Fastecho
tosser program into fidoconfig, to make migration from Fastecho to fidoconfig
(and hpt) more easy.

@enumerate
@item fconf2golded
@*Converts fidoconfig to configuration file of Golded by Odinn Sorensen.

Synopsys:@*
@command{fconf2golded <goldedConfigFileName> [<default.cfg>]}

Example:
@example
fconf2golded ~/golded/golded.cfg ~/golded/goldDefaults.cfg
@end example

@item fconf2msged
@*Converts fidoconfig to configuration file of MgsEd sysce version 6.

Synopsys:@*
@command{fconf2msged <msgedConfigFileName>}

Example:
@example
fconf2msged ~/msged.areas
@end example

@item fconf2aquaed
@*Convert fidoconfig to configuration file of AquaEd.

Synopsys:@*
@command{fconf2aquaed <aquaedConfigFileName> [<default.cfg>]}
(if you specify default.cfg there will be a include <default.cfg> generated in
your config file)

Example:
@example
fconf2aquaed ~/aquaed/aquaed.cfg
@end example

@item fconf2binkd@*
Fidoconfig to binkd config converter: generates passwords file for binkd or
generates simple binkd config file (you may include it into real config).

Synopsys:@*
@command{fconf2binkd [-v] [-h] [-c path/to/fidoconfig] [-f] [-p] [output_file_name]}

See details in fconf2binkd(1) man page or fconf2binkd.html.

Examples:
@example
fconf2binkd -c ../husky/config -p binkd.pwd
fconf2binkd binkd.conf
@end example

@item fconf2fidogate@*
Convert fidoconfig into config file of fidogate.

Synopsys:@*
@command{fconf2fidogate <FidoGateAreasFileName> [<default.cfg>]}
(you may read config defaults from default.cfg)

Example:
@example
fconf2fidogate /usr/local/lib/fidogate/areas
@end example

@item fconf2squish@*
Convert fidoconfig into config file of Squish.

Synopsys:@*
@command{fconf2squish (<squish.cfg>|-) [<default.cfg>]}
(- as squish.cfg means stdout)
(you may read config defaults from default.cfg)

See details in fconf2squish(1) man page or fconf2squish.html

Examples:
@example
fconf2squish ~/squish/squish.cfg
fconf2squish - | grep -i echo >sqechoes.cfg
@end example

@item fconf2tornado@*
Convert fidoconfig into config file of Tornado BBS.

Synopsys:@*
@command{fconf2tornado -[command [-command...]] <tornado.ctl> [<default.cfg>]}
(you may read config defaults from default.cfg)

See details in fconf2tornado(1) man page or fconf2tornado.html

Examples:
@example
fconf2tornado -ff -g -grLocal filearea.ctl temp.ctl
fconf2tornado -mel -ss256 c:\bbs\tornado\msgarea.ctl
@end example

@item fecfg2fconf@*
Convert configuration of Fastecho into fidoconfig.

Synopsys:@*
@command{fecfg2fconf [path]fastecho.cfg [output fidoconfig]}

Example:
@example
fecfg2fconf c:\fido\fastecho\fastecho.cfg fidoconfig.tmp
@end example

@end enumerate

@node tparser, contact, converting, Top
@chapter Testing the config
You should run @command{tparser} @sc{everytime} you have changed the config. If tparser
found error in config please correct your config file and try again.

@table @asis
@item Syntax:
@command{tparser [-h|@minus{-help}] [-Dvar=value] [-E] [-P] [/path/to/config/file]}
@item Example:
@example
@command{tparser -Dmodule=hpt | less}
@end example
@end table

tparser (like any fidoconfig program) will display error messages if you have
made an error in the config. It also may be display some warnings about your
config settings. It will grumble on every Keyword it does not know. It will
stop after the first error (not warning) to give you the ability to change
your config.

@subsection Options

@table @asis
@item -Dvar=value
Set the config variable @code{var} to @code{value}.
@item -E
Dumps config into stdout (all config variables expanded).
@item -h
@itemx @minus{-help}
Display usage information.
@item -P
Try to create non-existing directories.
@end table


@node contact, , tparser, Top
@chapter Contacting the author
You can reach me at

@example
@email{mtt@@tichy.de}
2:2432/645
@end example

and in the fido echoarea

@example
linux.develop.ger
fidosoft.husky
@end example

Max Levenkov:
@example
@email{sackett@@mail.ru}
ru.husky (russian)
ru.echoprocessors (russian)
fidosoft.husky (english)
@end example

The actual fidoconfig library and other fido software will be on
@url{http://husky.sourceforge.net}.

@bye
