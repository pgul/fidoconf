# $Id$
#
# Microsoft Visual C++ Makefile for build fidoconf LIB or DLL
# and programs

## include common makefiles part ##
!include ../../huskymak.cfg

!if "$(OBJOUT)" != ""

OBJOUT2=$(OBJOUT)fidoconf/

!if [if not exist $(OBJOUT2:/=\) $(MKDIR) $(OBJOUT2:/=\)] == 0
OBJOUT=$(OBJOUT)fidoconf/
!endif

!endif

H_PFX=$(H_DIR)
!include fn_long.inc
!include makefile.inc

IMPLIBNAME=$(LIBOUT)$(IMPLIBPREFIX)$(LIBNAME)$(DLLSUFFIX)
DLLNAME=$(BINOUT)$(DLLPREFIX)$(LIBNAME)$(DLLSUFFIX)
DLLIMPORTLIB=$(IMPLIBNAME)$(_LIB)
PROGRAMSILK=$(PROGRAMS:.exe=.ilk)
PROGRAMSPDB=$(PROGRAMS:.exe=.pdb)


## program options ##

## options for compiler ##

CINCL	= -I$(H_DIR) -I../../huskylib -I../../smapi

CFLAGS	= $(CFLAGS) $(CINCL)

## options for linker ##
LFLAGS=$(LFLAGS) $(LINKPDBOPT)$(BINOUT)

LDLLFLAGS=$(LDLLFLAGS) $(LINKNAMEOPT)$(TARGETDLL) \
	  $(LINKPDBOPT)$(BINOUT) /implib:"$(DLLIMPORTLIB)"

# libraries need to build binary file
# for dynamic libraries:
#DLLS	= $(LIBS)

# for executables
#LIBSL	= $(LIBS)

!if $(DYNLIBS)==1
DLLS	= $(LIBS) $(IMPLIBPREFIX)husky$(DLLSUFFIX)$(_LIB) \
	      $(IMPLIBPREFIX)smapi$(DLLSUFFIX)$(_LIB)
LIBSL	= $(DLLS) $(DLLIMPORTLIB)

TARGETLIBNAME=$(TARGETDLL)
!else
LIBSL	= $(LIBS) $(TARGETLIB) $(LIBPREFIX)smapi$(LIBSUFFIX)$(_LIB) \
          $(LIBPREFIX)husky$(LIBSUFFIX)$(_LIB)

TARGETLIBNAME=$(TARGETLIB)
!endif



default:
	@echo Set DYNLIBS=1 in huskymak.cfg to build dynamic version of library
	@echo Run 'make lib' to build library ($(TARGETLIBNAME))
	@echo Run 'make all' to build library ($(TARGETLIBNAME))
	@echo _    and programs ($(PROGRAMS))

lib: $(TARGETLIBNAME)

programs: $(PROGRAMS)

all: lib programs

$(OBJS) $(PRGOBJS) : $(HEADERS) makefile.mvc ../../huskymak.cfg makefile.inc

#$(OBJS) $(PRGOBJS):: $(_SRC_DIR)$(@B)$(_C)
#	@$(CC) $(CFLAGS) $(OBJOPT) $(OBJNAMEOPT)$(O) $?

{$(_SRC_DIR)}$(_C){$(O)}$(_OBJ)::
	@$(CC) $(CFLAGS) $(OBJOPT) $(OBJNAMEOPT)$(O) @<<
$<
<<


$(TARGETLIB):	$(OBJS)
    @echo Create $(TARGETLIB)...
	@$(AR) $(ARFLAGS) $(LIBNAMEOPT)$@ @<<
$**
<<


$(TARGETDLL):	$(OBJS)
	@echo Create $(TARGETDLL)...
	@$(LINK) $(LDLLFLAGS) $(DLLS) @<<
$(OBJS)
<<


$(TPARSER):: $(TPAROBJ)
	@echo Create $(TPARSER)...
	@$(LINK) $(LFLAGS) $(LINKNAMEOPT)$@ $** $(LIBSL)

$(LINKED): $(LINKOBJ)
	@echo Create $(LINKED)...
	@$(LINK) $(LFLAGS) $(LINKNAMEOPT)$@ $** $(LIBSL)

$(FC2AED): $(AEDOBJ)
	@echo Create $(FC2AED)...
	@$(LINK) $(LFLAGS) $(LINKNAMEOPT)$@ $** $(LIBSL)

$(FC2BINKD): $(BINKOBJ)
	@echo Create $(FC2BINKD)...
	@$(LINK) $(LFLAGS) $(LINKNAMEOPT)$@ $** $(LIBSL)

$(FC2FGATE): $(FGATEOBJ)
	@echo Create $(FC2FGATE)...
	@$(LINK) $(LFLAGS) $(LINKNAMEOPT)$@ $** $(LIBSL)

$(FC2GED): $(GEDOBJ)
	@echo Create $(FC2GED)...
	@$(LINK) $(LFLAGS) $(LINKNAMEOPT)$@ $** $(LIBSL)

$(FC2MSGED): $(MSGEDOBJ)
	@echo Create $(FC2MSGED)...
	@$(LINK) $(LFLAGS) $(LINKNAMEOPT)$@ $** $(LIBSL)

$(FC2SQ): $(SQOBJ)
	@echo Create $(FC2SQ)...
	@$(LINK) $(LFLAGS) $(LINKNAMEOPT)$@ $** $(LIBSL)

$(FC2TOR): $(TOROBJ)
	@echo Create $(FC2TOR)...
	@$(LINK) $(LFLAGS) $(LINKNAMEOPT)$@ $** $(LIBSL)

$(FECFG2FC): $(FEOBJ)
	@echo Create $(FECFG2FC)...
	@$(LINK) $(LFLAGS) $(LINKNAMEOPT)$@ $** $(LIBSL)



clean:
	-$(RM) $(RMOPT) $(OBJS:/=\)
	-$(RM) $(RMOPT) VC*$(_PDB)
	-$(RM) $(RMOPT) $(IMPLIBNAME:/=\)$(_EXP)
	-$(RM) $(RMOPT) $(DLLNAME:/=\)$(ILK)
	-$(RM) $(RMOPT) $(PRGOBJS:/=\)
	-$(RM) $(RMOPT) $(PROGRAMSILK:/=\)
	-$(RM) $(RMOPT) $(DLLNAME:/=\)$(_ILK)

distclean: clean
	-$(RM) $(RMOPT) $(DLLNAME:/=\)$(_PDB)
	-$(RM) $(RMOPT) $(PROGRAMSPDB:/=\)
	-$(RM) $(RMOPT) $(PROGRAMS:/=\)
	-$(RM) $(RMOPT) $(TARGETLIB:/=\)
	-$(RM) $(RMOPT) $(TARGETDLL:/=\)
	-$(RM) $(RMOPT) $(DLLIMPORTLIB:/=\)

 
